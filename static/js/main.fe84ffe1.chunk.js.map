{"version":3,"sources":["contexts/stateProvider.js","reducer.js","components/Break/Break.jsx","components/Session/Session.jsx","hooks/useClockify.jsx","components/Controls/Controls.jsx","components/Logo/Logo.jsx","Timer.js","contexts/themeProvider.js","components/Links/Links.jsx","components/Background/Background.jsx","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","projectName","timerLabel","busyIndicator","breakValue","sessionValue","timerValue","actionTypes","state","action","type","Break","dispatch","className","id","onClick","disabled","icon","faMinus","faPlus","Session","useClockify","minutes","Math","floor","seconds","Controls","clockifiedValue","audioSoundRef","useRef","useEffect","timerInterval","setInterval","current","play","document","title","clearInterval","faPause","faPlay","pause","time","faRedo","src","ref","preload","Logo","href","process","alt","width","height","Timer","ThemeContext","ThemeUpdateContext","ThemeProvider","useState","darkTheme","setDarkTheme","prevDarkTheme","Links","Background","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe84ffe1.chunk.js","sourcesContent":["import { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\n    projectName: 'Simple Pomodoro Timer',\n    timerLabel: 'Session',\n    busyIndicator: false,\n    breakValue: 5,\n    sessionValue: 25,\n    // timerValue is the initial value of 25 minnutes multiplied by 60 in order to have it in seconds much more easily decreasable by 1\n    timerValue: 1500\n}\n\nexport const actionTypes = {\n    SET_PROJECTNAME: 'SET_PROJECTNAME',\n    RESET_TIMERS: 'RESET_TIMERS',\n    START_TIMER: 'START_TIMER',\n    TOGGLE_TIMER_LABEL: 'TOGGLE_TIMER_LABEL',\n    TOGGLE_ISBUSY_INDICATOR: 'TOGGLE_ISBUSY_INDICATOR',\n    INCREASE_BREAK_VALUE: 'INCREASE_BREAK_VALUE',\n    DECREASE_BREAK_VALUE: 'DECREASE_BREAK_VALUE',\n    INCREASE_SESSION_VALUE: 'INCREASE_SESSION_VALUE',\n    DECREASE_SESSION_VALUE: 'DECREASE_SESSION_VALUE'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_PROJECTNAME:\n            return {\n                ...state,\n                projectName: action.projectName,\n                timerLabel: action.timerLabel\n            };\n        case actionTypes.INCREASE_BREAK_VALUE:\n            return {\n                ...state,\n                breakValue: action.breakValue\n            };\n        case actionTypes.DECREASE_BREAK_VALUE:\n            return {\n                ...state,\n                breakValue: action.breakValue\n            };\n        case actionTypes.INCREASE_SESSION_VALUE:\n            return {\n                ...state,\n                sessionValue: action.sessionValue,\n                timerValue: action.timerValue\n            };\n        case actionTypes.DECREASE_SESSION_VALUE:\n            return {\n                ...state,\n                sessionValue: action.sessionValue,\n                timerValue: action.timerValue\n            };\n        case actionTypes.TOGGLE_ISBUSY_INDICATOR:\n            return {\n                ...state,\n                busyIndicator: action.busyIndicator\n            };\n        case actionTypes.TOGGLE_TIMER_LABEL:\n            return {\n                ...state,\n                timerLabel: action.timerLabel\n            };\n        case actionTypes.START_TIMER:\n            return {\n                ...state,\n                timerValue: action.timerValue\n            };\n        case actionTypes.RESET_TIMERS:\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import './break.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { useStateValue } from '../../contexts/stateProvider'\nimport { actionTypes } from '../../reducer'\n\nconst Break = () => {\n\n    const [{breakValue, busyIndicator}] = useStateValue();\n    const [state, dispatch] = useStateValue();\n\n    const handleDecrement = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.DECREASE_BREAK_VALUE,\n            breakValue: breakValue - 1\n        })\n    }\n    const handleIncrement = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.INCREASE_BREAK_VALUE,\n            breakValue: breakValue + 1\n        })\n    }\n\n    return (\n        <div className='break'>\n            <span id='break-label' className='break__label'>Break Length</span>\n            <div className=\"break__controls\">\n                <button\n                    type='button'\n                    id='break-decrement'\n                    className='break__controls--btn'\n                    onClick={handleDecrement}\n                    disabled={busyIndicator || breakValue <= 1}\n                >\n                    <FontAwesomeIcon icon={faMinus}/>\n                </button>\n                <p id=\"break-length\" className='break__length'>{breakValue}</p>\n                <button\n                    type='button'\n                    id='break-increment'\n                    className='break__controls--btn'\n                    onClick={handleIncrement}\n                    disabled={busyIndicator || breakValue > 59}\n                >\n                    <FontAwesomeIcon icon={faPlus} />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Break;\n","import './session.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { useStateValue } from '../../contexts/stateProvider';\nimport { actionTypes } from '../../reducer';\n\nconst Session = () => {\n\n    const [{sessionValue, busyIndicator}] = useStateValue();\n    const [state, dispatch] = useStateValue();\n\n    const handleDecrement = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.DECREASE_SESSION_VALUE,\n            sessionValue: sessionValue - 1,\n            timerValue: (sessionValue - 1) * 60\n        })\n    }\n    const handleIncrement = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.INCREASE_SESSION_VALUE,\n            sessionValue: sessionValue + 1,\n            timerValue: (sessionValue + 1) * 60\n        })\n    }\n\n    return (\n        <div className='session'>\n            <span id='session-label' className='session__label'>Session Length</span>\n            <div className=\"session__controls\">\n                <button\n                    type='button'\n                    id='session-decrement'\n                    className='session__controls--btn'\n                    onClick={handleDecrement}\n                    disabled={busyIndicator || sessionValue <= 1}\n                >\n                    <FontAwesomeIcon icon={faMinus}/>\n                </button>\n                <p id=\"session-length\" className='session__length'>{sessionValue}</p>\n                <button\n                    type='button'\n                    id='session-increment'\n                    className='session__controls--btn'\n                    onClick={handleIncrement}\n                    disabled={busyIndicator || sessionValue > 59}\n                >\n                    <FontAwesomeIcon icon={faPlus} />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Session;\n","import { useStateValue } from '../contexts/stateProvider';\n\nexport function useClockify() {\n    const [{timerValue}] = useStateValue();\n\n    let minutes = Math.floor(timerValue / 60);\n    let seconds = timerValue - (minutes * 60);\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return `${minutes}:${seconds}`;\n}","import './controls.sass'\nimport { useEffect, useRef } from 'react';\nimport { useClockify } from '../../hooks/useClockify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faRedo } from '@fortawesome/free-solid-svg-icons'\nimport { useStateValue } from '../../contexts/stateProvider';\nimport { actionTypes } from '../../reducer';\n\nconst Controls = () => {\n\n    const [{projectName, timerValue, breakValue, sessionValue, timerLabel, busyIndicator}] = useStateValue();\n    const [state, dispatch] = useStateValue();\n    // Custom Hook\n    const clockifiedValue = useClockify();\n    const bellSoundUrl = \"https://www.soundjay.com/misc/sounds/bell-ringing-05.mp3\";\n    const audioSoundRef = useRef();\n    \n    const handleReset = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.RESET_TIMERS\n        })\n        audioSoundRef.current.pause();\n        audioSoundRef.current.time = 0;\n    }\n\n    const handlePlayPause = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.TOGGLE_ISBUSY_INDICATOR,\n            busyIndicator: !state.busyIndicator\n        })\n    }\n\n    const handleCount = () => {\n        dispatch({\n            ...state,\n            type: actionTypes.START_TIMER,\n            timerValue: timerValue - 1\n        })\n        if (timerValue === 0) audioSoundRef.current.play();\n        if (timerValue < 0) {\n            if (timerLabel === 'Session') {\n                dispatch({\n                    ...state,\n                    type: actionTypes.TOGGLE_TIMER_LABEL,\n                    timerLabel: 'Break'\n                })\n                dispatch({\n                    ...state,\n                    type: actionTypes.START_TIMER,\n                    timerValue: (breakValue * 60) - 1\n                })\n            } else {\n                dispatch({\n                    ...state,\n                    type: actionTypes.TOGGLE_TIMER_LABEL,\n                    timerLabel: 'Session'\n                })\n                dispatch({\n                    ...state,\n                    type: actionTypes.START_TIMER,\n                    timerValue: (sessionValue * 60) - 1\n                })\n            }\n        }\n    }\n    \n    useEffect(() => {\n        if (busyIndicator) {\n            let timerInterval = setInterval(() => {\n                handleCount();\n                document.title = `[${timerLabel}] - ${clockifiedValue}`\n            }, 1000);\n            // Clear interval if the component is unmounted\n            return () => clearInterval(timerInterval);\n        } else document.title = projectName;\n    })\n\n    return (\n        <div className='controls__wrp'>\n            <button type='button' id='start_stop' onClick={handlePlayPause}>\n                <FontAwesomeIcon\n                    icon={!busyIndicator ? faPlay : faPause}\n                />\n            </button>\n            <button type='button' id='reset' onClick={handleReset}>\n                <FontAwesomeIcon\n                    icon={faRedo}\n                />\n            </button>\n            <audio id=\"beep\" src={bellSoundUrl} ref={audioSoundRef} preload='auto' />\n        </div>\n    )\n}\n\nexport default Controls;\n","import './logo.sass'\n\nconst Logo = () => {\n    return (\n        <div className=\"logo-container\">\n            <a href=\"https://www.neverproductive.com/\">\n                <img src={process.env.PUBLIC_URL + '/Dark-Tree-Rounded-Corners.png'} alt=\"logo\" width=\"100%\" height=\"100%\" className=\"logo\" />\n            </a>\n        </div>\n    )\n}\n\nexport default Logo;","import './timer.sass';\nimport Break from './components/Break/Break'\nimport Session from './components/Session/Session'\nimport Controls from './components/Controls/Controls'\nimport Logo from './components/Logo/Logo';\nimport { useStateValue } from './contexts/stateProvider';\nimport { useClockify } from './hooks/useClockify';\n\nconst Timer = () => {\n\n  const [{projectName, timerLabel}] = useStateValue();\n  const clockifiedValue = useClockify();\n\n  return (\n    <div className=\"timer\">\n      <h1 className='timer__maintitle'>{projectName}</h1>\n      <h3 id='timer-label' className='timer__label'>{timerLabel}</h3>\n      <h2 id='time-left' className='timer__time'>{clockifiedValue}</h2>\n      <Controls />\n      <div className=\"timer__controllers\">\n        <Break />\n        <Session />\n      </div>\n      <Logo />\n    </div>\n  );\n}\n\nexport default Timer;\n","import { createContext, useContext, useState } from \"react\";\n\nconst ThemeContext = createContext();\nconst ThemeUpdateContext = createContext();\n\nexport const useTheme = () => {\n    return useContext(ThemeContext);\n}\n\nexport const useThemeUpdate = () => {\n    return useContext(ThemeUpdateContext);\n}\n\nconst ThemeProvider = ({ children }) => {\n    const [darkTheme, setDarkTheme] = useState(false);\n\n    const toggleTheme = () => {\n        setDarkTheme((prevDarkTheme) => !prevDarkTheme);\n    };\n\n    return (\n        <ThemeContext.Provider value={darkTheme}>\n            <ThemeUpdateContext.Provider value={toggleTheme}>\n                {children}\n            </ThemeUpdateContext.Provider>\n        </ThemeContext.Provider>\n    );\n};\n\nexport default ThemeProvider;","import './links.sass';\n\nconst Links = () => {\n\n    return (\n        <div className=\"links\">\n            <a className=\"link discord\" href=\"https://www.youtube.com/c/JordanDParker\">\n                <img src={process.env.PUBLIC_URL + '/youtube.png'} alt=\"youtube\" width=\"100%\" height=\"100%\"/>\n            </a>\n            <a className=\"link blog\" href=\"https://www.neverproductive.com/\">\n                <img src={process.env.PUBLIC_URL + '/Tree.png'} alt=\"logo\" width=\"100%\" height=\"100%\"/>\n            </a>\n            <a className=\"link discord\" href=\"https://discord.gg/7T99jjVcJX\">\n                <img src={process.env.PUBLIC_URL + '/discord.png'} alt=\"discord\" width=\"100%\" height=\"100%\"/>\n            </a>\n        </div>\n    )\n}\n\nexport default Links\n","import './background.sass';\n\nconst Background = () => {\n    return (\n        <div className=\"background-wrapper\">\n            <img src={process.env.PUBLIC_URL + '/Background.png'} alt=\"background\" className=\"background\" width=\"100%\" height =\"100%\"/>\n        </div>\n    )\n}\n\nexport default Background\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_variables.sass';\nimport './index.sass';\nimport Timer from './Timer';\nimport { StateProvider } from \"./contexts/stateProvider\";\nimport reducer, { initialState } from \"./reducer\";\nimport ThemeProvider from './contexts/themeProvider';\nimport Links from './components/Links/Links';\nimport Background from './components/Background/Background';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider reducer={reducer} initialState={initialState}>\n      <ThemeProvider>\n        <Background />\n        <Timer />\n        <Links />\n      </ThemeProvider>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}